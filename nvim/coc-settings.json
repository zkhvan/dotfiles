{
  "coc.preferences.currentFunctionSymbolAutoUpdate": true,

  "coc.preferences.floatActions": true,
  "coc.preferences.formatOnSaveFiletypes": ["go"],

  // Do it manually
  "coc.preferences.extensionUpdateCheck": "never",

  // Don't try to run on files larger than this. Reduced from 10mb
  "coc.preferences.maxFileSize": "1MB",

  // Use vim's native quickfix
  "coc.preferences.useQuickfixForLocations": true,

  "list.insertMappings": {
    "<A-v>": "eval:@@",
    "<C-x>": "action:split",
    "<C-v>": "action:vsplit"
  },

  // Hide the super noisy Actions, # of References etc virtualText that
  // appears at end of lines
  "codeLens.enable": false,

  "diagnostic.checkCurrentLine": false,
  "diagnostic.displayByAle": false,
  "diagnostic.enable": true,
  "diagnostic.enableMessage": "always",
  "diagnostic.enableSign": true,
  "diagnostic.errorSign": "⚑",
  "diagnostic.hintSign": "⚑",
  "diagnostic.infoSign": "⚑",
  "diagnostic.separateRelatedInformationAsDiagnostics": true,
  "diagnostic.level": "hint",
  "diagnostic.messageTarget": "float",
  "diagnostic.refreshOnInsertMode": true,
  "diagnostic.virtualText": false,
  "diagnostic.virtualTextPrefix": "» ",
  "diagnostic.warningSign": "⚑",

  // Opt-in semantic token support from LSP servers.
  "semanticTokens.filetypes": ["bicep"],

  "suggest.minTriggerInputLength": 1,
  "suggest.snippetIndicator": " ⭐︎",
  "suggest.timeout": 2000, // down from 5000

  // =========================================================================
  // Language Servers
  // =========================================================================

  "languageserver": {
    "godot": {
      "host": "127.0.0.1",
      "filetypes": ["gdscript"],
      "port": 6005
    },
    "terraform": {
      "command": "terraform-ls",
      "args": ["serve"],
      "filetypes": ["terraform", "tf"],
      "initializationOptions": {
        "experimentalFeatures": {
          "prefillRequiredFields": true
        }
      }
    },
    "tilt": {
      "command": "tilt",
      "args": ["lsp", "start"],
      "filetypes": ["starlark"],
      "rootPatterns": [".git"]
    },
    "zk": {
      "command": "zk",
      "args": ["lsp"],
      "filetypes": ["markdown"],
      "initializationOptions": {},
      "settings": {}
    }
  },

  // =========================================================================
  // coc-css
  // =========================================================================

  // Using coc-diagnostic + stylelint instead
  "css.validate": false,

  // =========================================================================
  // coc-diagnostic
  // =========================================================================

  "diagnostic-languageserver.enable": true,
  "diagnostic-languageserver.filetypes": {
    "markdown": ["markdownlint"]
    // "vim": [ "vint" ],
    // "css": [ "stylelint" ],
    // "dockerfile": [ "hadolint" ],
    // "markdown": [ "markdownlint" ]
    // neomake is still better for shellcheck and bashate since we can read
    // shebang first
  },
  "diagnostic-languageserver.linters": {
    "vale": {
      "command": "vale",
      "debounce": 100,
      "args": ["--no-exit", "--output", "JSON", "--ext", ".md"],
      "sourceName": "vale",
      "parseJson": {
        "errorsRoot": "stdin.md",
        "line": "Line",
        "column": "Span[0]",
        "endLine": "Line",
        "endColumn": "Span[1]",
        "message": "${Message}\n${Link}",
        "security": "Severity"
      },
      "securities": {
        "error": "error",
        "warning": "warning",
        "suggestion": "info"
      }
    }
  },
  // Most already defined
  // https://github.com/iamcco/coc-diagnostic/blob/master/src/config.ts
  //"diagnostic-languageserver.linters"

  // =========================================================================
  // coc-docthis
  // =========================================================================

  "docthis.returnsTag": false,
  "docthis.includeMemberOfOnClassMembers": false,
  "docthis.inferTypesFromNames": true,

  // =========================================================================
  // coc-git
  // =========================================================================

  // "true" makes things real slow
  "git.addGBlameToBufferVar": false,

  "git.enableGutters": true,
  "git.addedSign.hlGroup": "GitGutterAdd",
  "git.changedSign.hlGroup": "GitGutterChange",
  "git.removedSign.hlGroup": "GitGutterDelete",
  "git.topRemovedSign.hlGroup": "GitGutterDelete",
  "git.changeRemovedSign.hlGroup": "GitGutterChangeDelete",

  // =========================================================================
  // coc-prettier
  // =========================================================================

  "prettier.singleQuote": true,
  "prettier.trailingComma": "es5",
  "prettier.bracketSpacing": true,
  "prettier.semi": true,
  "prettier.useTabs": false,
  "prettier.proseWrap": "preserve",
  "prettier.arrowParens": "always",
  "prettier.statusItemText": "<ᴀ-=> ᴘʀᴇᴛᴛɪᴇʀ",

  // =========================================================================
  // coc-tssserver - typescript typings support, js and ts lang server
  // Validation is disabled in favor of coc-eslint
  // https://github.com/neoclide/coc-tsserver#configuration-options
  // =========================================================================

  "typescript.validate.enable": true,
  "typescript.preferences.quoteStyle": "single",
  "typescript.updateImportsOnFileMove.enable": false,

  "javascript.validate.enable": true,
  "javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,
  "javascript.preferences.quoteStyle": "single",
  "javascript.updateImportsOnFileMove.enable": false,
  "javascript.suggestionActions.enabled": false,

  // =========================================================================
  // coc-eslint
  // =========================================================================
  "eslint.alwaysShowStatus": true,

  // =========================================================================
  // coc-lua
  // =========================================================================
  "lua.checkForUpdates": "disabled",

  // =========================================================================
  // coc-markdownlint
  // =========================================================================
  "markdownlint.config": {
    "MD013": false,
    "MD024": false
  },

  // =========================================================================
  // coc-go
  // =========================================================================
  "go.tags": {},
  "go.checkForUpdates": "disabled",

  // =========================================================================
  // coc-powershell
  // =========================================================================
  // "powershell.integratedConsole.showOnStartup": false,

  // =========================================================================
  // coc-yaml
  // =========================================================================
  "yaml.schemaStore.enable": true,
  "yaml.schemas": {
    "kubernetes": "k8s/*.yaml",
    "https://raw.githubusercontent.com/ansible/ansible-lint/main/src/ansiblelint/schemas/execution-environment.json": [
      "execution-environment.yml"
    ],
    "https://raw.githubusercontent.com/ansible/ansible-lint/main/src/ansiblelint/schemas/meta-runtime.json": [
      "meta/runtime.yml"
    ],
    "https://raw.githubusercontent.com/ansible/ansible-navigator/main/src/ansible_navigator/data/ansible-navigator.json": [
      ".ansible-navigator.yaml",
      ".ansible-navigator.yml",
      "ansible-navigator.yaml",
      "ansible-navigator.yml"
    ],
    "https://raw.githubusercontent.com/ansible/ansible-lint/main/src/ansiblelint/schemas/requirements.json": [
      "requirements.yml"
    ],
    "https://raw.githubusercontent.com/ansible/ansible-lint/main/src/ansiblelint/schemas/meta.json": [
      "meta/main.yml"
    ],
    "https://raw.githubusercontent.com/ansible/ansible-lint/main/src/ansiblelint/schemas/vars.json": [
      "playbooks/vars/*.yml",
      "playbooks/vars/*.yaml",
      "vars/*.yml",
      "vars/*.yaml",
      "defaults/*.yml",
      "defaults/*.yaml",
      "host_vars/*.yml",
      "host_vars/*.yaml",
      "group_vars/*.yml",
      "group_vars/*.yaml"
    ],
    "https://raw.githubusercontent.com/ansible/ansible-lint/main/src/ansiblelint/schemas/playbook.json": [
      "**/playbooks/*.yml",
      "**/playbooks/*.yaml",
      "**/*playbook*.yml",
      "**/*playbook*.yaml",
      "site.yml",
      "site.yaml"
    ],
    "https://raw.githubusercontent.com/ansible/ansible-lint/main/src/ansiblelint/schemas/tasks.json": [
      "**/tasks/*.yml",
      "**/tasks/*.yaml"
    ],
    "https://raw.githubusercontent.com/ansible/ansible-lint/main/src/ansiblelint/schemas/ansible-lint-config.json": [
      ".ansible-lint",
      ".config/ansible-lint.yml"
    ],
    "https://raw.githubusercontent.com/ansible-community/molecule/main/src/molecule/data/molecule.json": [
      "molecule/*/molecule.yml"
    ],
    "https://raw.githubusercontent.com/ansible/ansible-lint/main/src/ansiblelint/schemas/galaxy.json": [
      "galaxy.yml"
    ],
    "https://raw.githubusercontent.com/ansible/ansible-rulebook/main/schema/ruleset_schema.json": [
      "rulebooks/*.yaml",
      "rulebooks/*.yml"
    ]
  },

  // =========================================================================
  // coc-sumneko-lua
  // =========================================================================
  "sumneko-lua.enableNvimLuaDev": true,
  "sumneko-lua.checkUpdate": false,
  "Lua.workspace.checkThirdParty": false,

  // =========================================================================
  // coc-ansible
  // =========================================================================
  "ansibleServer.trace.server": "verbose"
}
